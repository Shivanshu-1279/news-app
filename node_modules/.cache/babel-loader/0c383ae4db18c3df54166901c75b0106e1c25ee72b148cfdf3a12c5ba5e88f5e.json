{"ast":null,"code":"var _jsxFileName = \"D:\\\\Shivanshu Folder\\\\learning\\\\React3\\\\news-app\\\\src\\\\Components\\\\News.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport NewsItem from \"./NewsItem\";\nimport Spinner from './Spinner';\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class News extends Component {\n  constructor(props) {\n    // Object is passed below, then only constructor will work.\n    super(props);\n    this.capitalizeFirstLetter = string => {\n      return string.charAt(0).toUpperCase() + string.slice(1);\n    };\n    this.moveToBack = async () => {\n      // console.log(\"BACK\");\n      // let url = `https://newsapi.org/v2/top-headlines?country=${this.props.country}&category=${this.props.category}&apiKey=e8adac170d874fd296098e16fed2f214&page=${\n      //   this.state.page - 1\n      // }&pageSize=${this.props.pageSize}`;\n      //  this.setState({loading:true});\n      // let data = await fetch(url);\n      // let parsedData = await data.json();\n      // // console.log(parsedData);\n      // this.setState({\n      //   page: this.state.page - 1,\n      //   articles: parsedData.articles,\n      //   loading:false\n      // });\n      this.setState({\n        page: this.state.page - 1\n      });\n      this.updation();\n    };\n    this.moveToNext = async () => {\n      console.log(\"NEXT\");\n      // Math ceil will give the round off or integer value of the next bigger number\n      if (this.state.page + 1 > Math.ceil(this.state.totalResults / this.props.pageSize)) {} else {\n        // let url = `https://newsapi.org/v2/top-headlines?country=${this.props.country}&category=${this.props.category}&apiKey=e8adac170d874fd296098e16fed2f214&page=${\n        //   this.state.page + 1\n        // }&pageSize=${this.props.pageSize}`;\n        // this.setState({loading:true});\n        // let data = await fetch(url);\n        // let parsedData = await data.json();\n        // console.log(parsedData.articles);\n        // this.setState({\n        //   page: this.state.page + 1,\n        //   articles: parsedData.articles,\n        //   loading:false\n        // });\n        this.setState({\n          page: this.state.page + 1\n        });\n        this.updation();\n      }\n    };\n    this.fetchMoreData = async () => {\n      this.setState({\n        page: this.state.page + 1\n      });\n      let url = `https://newsapi.org/v2/top-headlines?country=${this.props.country}&category=${this.props.category}&apiKey=e8adac170d874fd296098e16fed2f214&page=${this.state.page}&pageSize=${this.props.pageSize}`;\n      this.setState({\n        loading: true\n      });\n      let data = await fetch(url);\n      // console.log(data);\n      let parsedData = await data.json();\n      // console.log(parsedData);\n      this.setState({\n        articles: this.state.articles.concat(parsedData.articles),\n        totalResults: parsedData.totalResults,\n        loading: false\n      });\n    };\n    console.log(\"This is constructor from NewsItems\");\n    //\"state\" Object is created again\n    this.state = {\n      articles: [],\n      loading: false,\n      page: 1,\n      totalResults: 0\n    };\n\n    // Title will change according to the category we are reading and a function is used which will make the first letter capital.\n    document.title = `${this.capitalizeFirstLetter(this.props.category)} -NewsApp`;\n  }\n\n  // Basically we have created an updation function which can be used in previous and forward page \n  async updation() {\n    let url = `https://newsapi.org/v2/top-headlines?country=${this.props.country}&category=${this.props.category}&apiKey=e8adac170d874fd296098e16fed2f214&page=${this.state.page}&pageSize=${this.props.pageSize}`;\n    this.setState({\n      loading: true\n    });\n    let data = await fetch(url);\n    console.log(data);\n    let parsedData = await data.json();\n    console.log(parsedData);\n    this.setState({\n      articles: parsedData.articles,\n      totalResults: parsedData.totalResults,\n      loading: false\n    });\n  }\n  // API FETCH has been done below\n  // here \"componentDidMount()\" function runs after the component output had been rendered to the DOM.\n  async componentDidMount() {\n    // let url =\n    //   `https://newsapi.org/v2/top-headlines?country=${this.props.country}&category=${this.props.category}&apiKey=e8adac170d874fd296098e16fed2f214&page=1&pageSize=${this.props.pageSize}`;\n    //   this.setState({loading:true});\n    // let data = await fetch(url);\n    // console.log(data);\n    // let parsedData = await data.json();\n    // console.log(parsedData);\n    // this.setState({\n    //   articles: parsedData.articles,\n    //   totalResults: parsedData.totalResults,\n    //   loading:false\n    // });\n    this.updation();\n  }\n\n  // Move Back\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center my-4\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [\"Our NewsApp-Top \", this.capitalizeFirstLetter(this.props.category), \" headlines\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), \" \", this.state.loading && /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n        dataLength: this.state.articles.length,\n        next: this.fetchMoreData,\n        hasMore: this.state.articles.length !== this.state.totalResults,\n        loader: /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 19\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: this.state.articles.map(element => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-4 my-2\",\n              children: /*#__PURE__*/_jsxDEV(NewsItem, {\n                title: element.title ? element.title.slice(0, 50) : \"\",\n                description: element.description ? element.description.slice(0, 190) : \"\",\n                imageUrl: element.urlToImage,\n                newsURL: element.url,\n                author: element.author,\n                date: element.publishedAt,\n                name: element.source.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 17\n              }, this)\n            }, element.url, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), \"mij\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this);\n  }\n}\nNews.defaultProps = {\n  country: \"in\",\n  pageSize: 8,\n  category: 'general'\n};\nNews.propTypes = {\n  country: PropTypes.string,\n  pageSize: PropTypes.number,\n  category: PropTypes.string\n};\nexport default News;","map":{"version":3,"names":["React","Component","PropTypes","NewsItem","Spinner","InfiniteScroll","News","constructor","props","capitalizeFirstLetter","string","charAt","toUpperCase","slice","moveToBack","setState","page","state","updation","moveToNext","console","log","Math","ceil","totalResults","pageSize","fetchMoreData","url","country","category","loading","data","fetch","parsedData","json","articles","concat","document","title","componentDidMount","render","length","map","element","description","urlToImage","author","publishedAt","source","name","defaultProps","propTypes","number"],"sources":["D:/Shivanshu Folder/learning/React3/news-app/src/Components/News.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport NewsItem from \"./NewsItem\";\r\nimport Spinner from './Spinner'\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\nexport class News extends Component {\r\n                                         \r\n  static defaultProps={\r\n        country:\"in\",\r\n        pageSize:8,\r\n        category: 'general',\r\n  }\r\n\r\n  static propTypes={\r\n country: PropTypes.string,\r\n pageSize:PropTypes.number,\r\n category: PropTypes.string,\r\n  }\r\n  capitalizeFirstLetter=(string)=>{\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n}                                      \r\n\r\n  constructor(props) {\r\n    // Object is passed below, then only constructor will work.\r\n    super(props);\r\n    console.log(\"This is constructor from NewsItems\");\r\n    //\"state\" Object is created again\r\n    this.state = {\r\n      articles: [],\r\n      loading: false,\r\n      page: 1,\r\n      totalResults:0\r\n    }\r\n\r\n    // Title will change according to the category we are reading and a function is used which will make the first letter capital.\r\n      document.title=`${this.capitalizeFirstLetter(this.props.category)} -NewsApp`;\r\n  }\r\n                                                                  \r\n  // Basically we have created an updation function which can be used in previous and forward page \r\n  async updation() {\r\n    let url =\r\n      `https://newsapi.org/v2/top-headlines?country=${this.props.country}&category=${this.props.category}&apiKey=e8adac170d874fd296098e16fed2f214&page=${this.state.page}&pageSize=${this.props.pageSize}`;\r\n      this.setState({loading:true});\r\n    let data = await fetch(url);\r\n    console.log(data);\r\n    let parsedData = await data.json();\r\n    console.log(parsedData);\r\n    this.setState({\r\n      articles: parsedData.articles,\r\n      totalResults: parsedData.totalResults,\r\n      loading:false\r\n    });\r\n  };\r\n\r\n\r\n  // API FETCH has been done below\r\n  // here \"componentDidMount()\" function runs after the component output had been rendered to the DOM.\r\n  async componentDidMount() {\r\n    // let url =\r\n    //   `https://newsapi.org/v2/top-headlines?country=${this.props.country}&category=${this.props.category}&apiKey=e8adac170d874fd296098e16fed2f214&page=1&pageSize=${this.props.pageSize}`;\r\n    //   this.setState({loading:true});\r\n    // let data = await fetch(url);\r\n    // console.log(data);\r\n    // let parsedData = await data.json();\r\n    // console.log(parsedData);\r\n    // this.setState({\r\n    //   articles: parsedData.articles,\r\n    //   totalResults: parsedData.totalResults,\r\n    //   loading:false\r\n    // });\r\n    this.updation();\r\n  }\r\n                                                                                                 \r\n  // Move Back\r\n  moveToBack = async () => {\r\n    // console.log(\"BACK\");\r\n    // let url = `https://newsapi.org/v2/top-headlines?country=${this.props.country}&category=${this.props.category}&apiKey=e8adac170d874fd296098e16fed2f214&page=${\r\n    //   this.state.page - 1\r\n    // }&pageSize=${this.props.pageSize}`;\r\n    //  this.setState({loading:true});\r\n    // let data = await fetch(url);\r\n    // let parsedData = await data.json();\r\n    // // console.log(parsedData);\r\n    // this.setState({\r\n    //   page: this.state.page - 1,\r\n    //   articles: parsedData.articles,\r\n    //   loading:false\r\n    // });\r\n  this.setState({page: this.state.page-1});\r\n  this.updation();\r\n  };\r\n                                                                 \r\n  // Move Next\r\n  moveToNext = async () => {\r\n    console.log(\"NEXT\");\r\n    // Math ceil will give the round off or integer value of the next bigger number\r\n    if (this.state.page + 1 > Math.ceil(this.state.totalResults / this.props.pageSize)) {\r\n    } \r\n    else {\r\n      // let url = `https://newsapi.org/v2/top-headlines?country=${this.props.country}&category=${this.props.category}&apiKey=e8adac170d874fd296098e16fed2f214&page=${\r\n      //   this.state.page + 1\r\n      // }&pageSize=${this.props.pageSize}`;\r\n      // this.setState({loading:true});\r\n      // let data = await fetch(url);\r\n      // let parsedData = await data.json();\r\n      // console.log(parsedData.articles);\r\n      // this.setState({\r\n      //   page: this.state.page + 1,\r\n      //   articles: parsedData.articles,\r\n      //   loading:false\r\n      // });\r\n      this.setState({page: this.state.page+1});\r\n      this.updation();\r\n    }\r\n  };\r\n                              \r\n  fetchMoreData =async() =>{\r\n    this.setState({page:this.state.page+1});\r\n    let url =\r\n    `https://newsapi.org/v2/top-headlines?country=${this.props.country}&category=${this.props.category}&apiKey=e8adac170d874fd296098e16fed2f214&page=${this.state.page}&pageSize=${this.props.pageSize}`;\r\n    this.setState({loading:true});\r\n  let data = await fetch(url);\r\n  // console.log(data);\r\n  let parsedData = await data.json();\r\n  // console.log(parsedData);\r\n  this.setState({\r\n    articles: this.state.articles.concat(parsedData.articles),\r\n    totalResults: parsedData.totalResults,\r\n    loading:false\r\n  });\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"container my-3\">\r\n        <h1 className=\"text-center my-4\">\r\n          {\" \"}\r\n          <strong>Our NewsApp-Top {this.capitalizeFirstLetter(this.props.category)} headlines</strong>{\" \"}\r\n         {this.state.loading &&<Spinner/>}\r\n        </h1>\r\n        \r\n        <InfiniteScroll\r\n          dataLength={this.state.articles.length}\r\n          next={this.fetchMoreData}\r\n          hasMore={this.state.articles.length!==this.state.totalResults}\r\n          loader={<Spinner/>}\r\n        >\r\n              \r\n        <div className=\"row\">\r\n          {/* When we use higher order arrays maping, we generally use key to differentiate all the elements AND \r\n    The slice() method returns selected elements in an array, as a new array.*/}\r\n          {this.state.articles.map((element) => {\r\n            return (\r\n              <div className=\"col-md-4 my-2\" key={element.url}>\r\n                <NewsItem \r\n                  title={element.title ? element.title.slice(0, 50) : \"\"}\r\n                  description={ element.description ? element.description.slice(0, 190) : \"\"}\r\n                  imageUrl={element.urlToImage}\r\n                  newsURL={element.url}\r\n                  author={element.author}\r\n                  date = {element.publishedAt}\r\n                  name = {element.source.name}\r\n                />\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        </InfiniteScroll>\r\n         mij\r\n        {/* <div className=\"container d-flex justify-content-between\">\r\n          <button\r\n            disabled={this.state.page <= 1}\r\n            type=\"button\"\r\n            className=\"btn btn-dark\"\r\n            onClick={this.moveToBack}\r\n          >\r\n            &larr; Back\r\n          </button>\r\n          <button\r\n            disabled={\r\n              this.state.page + 1 > Math.ceil(this.state.totalResults / this.props.pageSize)\r\n            }\r\n            type=\"button\"\r\n            className=\"btn btn-dark\"\r\n            onClick={this.moveToNext}\r\n          >\r\n            Next &rarr;\r\n          </button>\r\n        </div> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default News;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}