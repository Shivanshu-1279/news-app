{"ast":null,"code":"var _jsxFileName = \"D:\\\\Shivanshu Folder\\\\learning\\\\React3\\\\news-app\\\\src\\\\Components\\\\News.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport NewsItem from \"./NewsItem\";\nimport Spinner from './Spinner';\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst News = props => {\n  _s();\n  const [articles, setArticles] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [page, setPage] = useState(1);\n  const [totalResults, setTotalResults] = useState(0);\n  const capitalizeFirstLetter = string => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  };\n\n  // Title will change according to the category we are reading and a function is used which will make the first letter capital.\n  document.title = `${capitalizeFirstLetter(props.category)} -NewsApp`;\n\n  // Basically we have created an updation function which can be used in previous and forward page \n  const updation = async props => {\n    props.setProgress(0);\n    let url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=e8adac170d874fd296098e16fed2f214&page=${page}&pageSize=${props.pageSize}`;\n    setLoading(true);\n    let data = await fetch(url);\n    props.setProgress(30);\n    // console.log(data);\n    let parsedData = await data.json();\n    props.setProgress(70);\n    // console.log(parsedData);\n    setArticles(parsedData.articles), setTotalResults(parsedData.totalResults), setLoading(false);\n    props.setProgress(100);\n  };\n\n  // API FETCH has been done below\n  useEffect(() => {\n    updation();\n  }, []);\n  const fetchMoreData = async () => {\n    setPage(page + 1);\n    let url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=e8adac170d874fd296098e16fed2f214&page=${page}&pageSize=${props.pageSize}`;\n    let data = await fetch(url);\n    let parsedData = await data.json();\n    setArticles(articles.concat(parsedData.articles)), setTotalResults(parsedData.totalResults);\n    // setloading(false)\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center my-4\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [\"Our NewsApp-Top \", capitalizeFirstLetter(props.category), \" headlines\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), loading && /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n      dataLength: state.articles,\n      next: fetchMoreData,\n      hasMore: articles.length !== totalResults,\n      loader: /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 19\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: state.articles.map(element => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-4 my-2\",\n              children: /*#__PURE__*/_jsxDEV(NewsItem, {\n                title: element.title ? element.title.slice(0, 50) : \"\",\n                description: element.description ? element.description.slice(0, 190) : \"\",\n                imageUrl: element.urlToImage,\n                newsURL: element.url,\n                author: element.author,\n                date: element.publishedAt,\n                name: element.source.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 17\n              }, this)\n            }, element.url, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n  News.defaultProps = {\n    country: \"in\",\n    pageSize: 8,\n    category: 'general'\n  };\n  News.propTypes = {\n    country: PropTypes.string,\n    pageSize: PropTypes.number,\n    category: PropTypes.string\n  };\n};\n_s(News, \"DJGT5z9fcO00SGn/4yt1PHL84Ps=\");\n_c = News;\nexport default News;\nvar _c;\n$RefreshReg$(_c, \"News\");","map":{"version":3,"names":["React","useState","useEffect","PropTypes","NewsItem","Spinner","InfiniteScroll","News","props","articles","setArticles","loading","setLoading","page","setPage","totalResults","setTotalResults","capitalizeFirstLetter","string","charAt","toUpperCase","slice","document","title","category","updation","setProgress","url","country","pageSize","data","fetch","parsedData","json","fetchMoreData","concat","state","length","map","element","description","urlToImage","author","publishedAt","source","name","defaultProps","propTypes","number"],"sources":["D:/Shivanshu Folder/learning/React3/news-app/src/Components/News.js"],"sourcesContent":["import React, { useState,useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport NewsItem from \"./NewsItem\";\r\nimport Spinner from './Spinner'\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\n const News=(props)=> {\r\n  const [articles, setArticles] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [page, setPage] = useState(1)\r\n  const [totalResults, setTotalResults] = useState(0)\r\n  \r\n const capitalizeFirstLetter=(string)=>{\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n          \r\n    // Title will change according to the category we are reading and a function is used which will make the first letter capital.\r\n      document.title=`${capitalizeFirstLetter(props.category)} -NewsApp`;\r\n  \r\n                                                                                                  \r\n// Basically we have created an updation function which can be used in previous and forward page \r\nconst updation = async (props)=> {\r\n  props.setProgress(0);\r\n  let url =\r\n    `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=e8adac170d874fd296098e16fed2f214&page=${page}&pageSize=${props.pageSize}`;      \r\n  setLoading(true);\r\n  let data = await fetch(url);\r\n  props.setProgress(30);\r\n  // console.log(data);\r\n  let parsedData = await data.json();\r\n  props.setProgress(70);\r\n  // console.log(parsedData);\r\n  setArticles(parsedData.articles),\r\n  setTotalResults(parsedData.totalResults),\r\n  setLoading(false)\r\n  props.setProgress(100);\r\n};\r\n                     \r\n       \r\n  // API FETCH has been done below\r\n  useEffect(() => {\r\n    updation(); \r\n}, [])\r\n                                                      \r\nconst fetchMoreData = async () =>{\r\n  setPage(page+1);\r\n   let url =\r\n   `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=e8adac170d874fd296098e16fed2f214&page=${page}&pageSize=${props.pageSize}`;\r\n let data = await fetch(url);\r\n let parsedData = await data.json();\r\n   setArticles(articles.concat(parsedData.articles)),\r\n   setTotalResults(parsedData.totalResults)\r\n   // setloading(false)\r\n };\r\n                                                                                                                               \r\n\r\n                                                                                                 \r\n    return (\r\n      <>\r\n        <h1 className=\"text-center my-4\">\r\n          {\" \"}\r\n          <strong>Our NewsApp-Top {capitalizeFirstLetter(props.category)} headlines</strong>{\" \"}\r\n        </h1>\r\n        {loading &&<Spinner/>}\r\n        {/* {<Spinner/>} */}\r\n        <InfiniteScroll\r\n          dataLength={state.articles}\r\n          next={fetchMoreData}\r\n          hasMore={articles.length!==totalResults}\r\n          loader={<Spinner/>}\r\n        >\r\n        <div className=\"container\">\r\n        <div className=\"row\">\r\n          {/* When we use higher order arrays maping, we generally use key to differentiate all the elements AND \r\n    The slice() method returns selected elements in an array, as a new array.*/}\r\n          {state.articles.map((element) => {\r\n            return (\r\n              <div className=\"col-md-4 my-2\" key={element.url}>\r\n                <NewsItem \r\n                  title={element.title ? element.title.slice(0, 50) : \"\"}\r\n                  description={ element.description ? element.description.slice(0, 190) : \"\"}\r\n                  imageUrl={element.urlToImage}\r\n                  newsURL={element.url}\r\n                  author={element.author}\r\n                  date = {element.publishedAt}\r\n                  name = {element.source.name}\r\n                />\r\n                  </div>\r\n            );\r\n          })}\r\n              </div>\r\n        </div>\r\n        </InfiniteScroll>\r\n        </>\r\n    );\r\n  \r\n      \r\nNews.defaultProps={\r\n  country:\"in\",\r\n  pageSize:8,\r\n  category: 'general',\r\n}\r\n                                            \r\nNews.propTypes={\r\ncountry: PropTypes.string,\r\npageSize:PropTypes.number,\r\ncategory: PropTypes.string,\r\n}\r\n\r\n}\r\n\r\nexport default News;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}